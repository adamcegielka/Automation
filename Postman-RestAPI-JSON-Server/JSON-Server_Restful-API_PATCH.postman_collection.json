{
	"info": {
		"_postman_id": "96fbc892-edc5-4fc8-a231-3e1622f8bc2e",
		"name": "JSON Server - Restful API - PATCH",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24777190"
	},
	"item": [
		{
			"name": "PATCH -  posts/title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"A new hope\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Carloman Jacques\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"A new hope\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/posts/5",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH -  posts/author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"A new hope\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Carloman Jacques\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\": \"Carloman Jacques\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/posts/5",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH -  profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Wiktor\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Wiktor\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/profile",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH -  comments body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"The quick, brown fox jumps over a lazy dog.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"body\": \"The quick, brown fox jumps over a lazy dog.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/comments/2",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"comments",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH -  comments postId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check postId\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(6);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"postId\": 6\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/comments/3",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"comments",
						"3"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}